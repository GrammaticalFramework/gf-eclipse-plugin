abstract Structural = Cat ** {
  flags
    coding = "latin1" ;
  -- ind A = Cat ;
  -- ind A2 = Cat ;
  -- ind AP = Cat ;
  -- ind AdA = Common ;
  -- ind AdN = Common ;
  -- ind AdV = Common ;
  -- ind Adv = Common ;
  -- ind Ant = Common ;
  -- ind CAdv = Common ;
  -- ind CN = Cat ;
  -- ind Card = Cat ;
  -- ind Cl = Cat ;
  -- ind ClSlash = Cat ;
  -- ind Comp = Cat ;
  -- ind Conj = Cat ;
  -- ind Det = Cat ;
  -- ind Digits = Cat ;
  -- ind IAdv = Common ;
  -- ind IComp = Cat ;
  -- ind IDet = Cat ;
  -- ind IP = Cat ;
  -- ind IQuant = Cat ;
  -- ind Imp = Cat ;
  -- ind Interj = Common ;
  -- ind N = Cat ;
  -- ind N2 = Cat ;
  -- ind N3 = Cat ;
  -- ind NP = Cat ;
  -- ind Num = Cat ;
  -- ind Numeral = Cat ;
  -- ind Ord = Cat ;
  -- ind PConj = Common ;
  -- ind PN = Cat ;
  -- ind Phr = Common ;
  -- ind Pol = Common ;
  -- ind Predet = Cat ;
  -- ind Prep = Cat ;
  -- ind Pron = Cat ;
  -- ind QCl = Cat ;
  -- ind QS = Cat ;
  -- ind Quant = Cat ;
  -- ind RCl = Cat ;
  -- ind RP = Cat ;
  -- ind RS = Cat ;
  -- ind S = Cat ;
  -- ind SC = Common ;
  -- ind SSlash = Cat ;
  -- ind Subj = Cat ;
  -- ind Temp = Common ;
  -- ind Tense = Common ;
  -- ind Text = Common ;
  -- ind Utt = Common ;
  -- ind V = Cat ;
  -- ind V2 = Cat ;
  -- ind V2A = Cat ;
  -- ind V2Q = Cat ;
  -- ind V2S = Cat ;
  -- ind V2V = Cat ;
  -- ind V3 = Cat ;
  -- ind VA = Cat ;
  -- ind VP = Cat ;
  -- ind VPSlash = Cat ;
  -- ind VQ = Cat ;
  -- ind VS = Cat ;
  -- ind VV = Cat ;
  -- ind Voc = Common ;
  data above_Prep : Cat.Prep ;
  data after_Prep : Cat.Prep ;
  data all_Predet : Cat.Predet ;
  data almost_AdA : Common.AdA ;
  data almost_AdN : Common.AdN ;
  data although_Subj : Cat.Subj ;
  data always_AdV : Common.AdV ;
  data and_Conj : Cat.Conj ;
  data as_CAdv : Common.CAdv ;
  data at_least_AdN : Common.AdN ;
  data at_most_AdN : Common.AdN ;
  data because_Subj : Cat.Subj ;
  data before_Prep : Cat.Prep ;
  data behind_Prep : Cat.Prep ;
  data between_Prep : Cat.Prep ;
  data both7and_DConj : Cat.Conj ;
  data but_PConj : Common.PConj ;
  data by8agent_Prep : Cat.Prep ;
  data by8means_Prep : Cat.Prep ;
  data can8know_VV : Cat.VV ;
  data can_VV : Cat.VV ;
  data during_Prep : Cat.Prep ;
  data either7or_DConj : Cat.Conj ;
  data every_Det : Cat.Det ;
  data everybody_NP : Cat.NP ;
  data everything_NP : Cat.NP ;
  data everywhere_Adv : Common.Adv ;
  data except_Prep : Cat.Prep ;
  data few_Det : Cat.Det ;
  data for_Prep : Cat.Prep ;
  data from_Prep : Cat.Prep ;
  data have_V2 : Cat.V2 ;
  data have_V3 : Cat.V3 ;
  data have_not_V3 : Cat.V3 ;
  data he_Pron : Cat.Pron ;
  data here7from_Adv : Common.Adv ;
  data here7to_Adv : Common.Adv ;
  data here_Adv : Common.Adv ;
  data how8many_IDet : Cat.IDet ;
  data how8much_IAdv : Common.IAdv ;
  data how_IAdv : Common.IAdv ;
  data i_Pron : Cat.Pron ;
  data if_Subj : Cat.Subj ;
  data if_then_Conj : Cat.Conj ;
  data in8front_Prep : Cat.Prep ;
  data in_Prep : Cat.Prep ;
  data it_Pron : Cat.Pron ;
  data language_title_Utt : Common.Utt ;
  data less_CAdv : Common.CAdv ;
  data many_Det : Cat.Det ;
  data more_CAdv : Common.CAdv ;
  data most_Predet : Cat.Predet ;
  data much_Det : Cat.Det ;
  data must_VV : Cat.VV ;
  data no_Quant : Cat.Quant ;
  data no_Utt : Common.Utt ;
  data nobody_NP : Cat.NP ;
  data not_Predet : Cat.Predet ;
  data nothing_NP : Cat.NP ;
  data on_Prep : Cat.Prep ;
  data only_Predet : Cat.Predet ;
  data or_Conj : Cat.Conj ;
  data otherwise_PConj : Common.PConj ;
  data part_Prep : Cat.Prep ;
  data please_Voc : Common.Voc ;
  data possess_Prep : Cat.Prep ;
  data quite_Adv : Common.AdA ;
  data she_Pron : Cat.Pron ;
  data so_AdA : Common.AdA ;
  data somePl_Det : Cat.Det ;
  data someSg_Det : Cat.Det ;
  data somebody_NP : Cat.NP ;
  data something_NP : Cat.NP ;
  data somewhere_Adv : Common.Adv ;
  data that_Quant : Cat.Quant ;
  data that_Subj : Cat.Subj ;
  data there7from_Adv : Common.Adv ;
  data there7to_Adv : Common.Adv ;
  data there_Adv : Common.Adv ;
  data therefore_PConj : Common.PConj ;
  data they_Pron : Cat.Pron ;
  data this_Quant : Cat.Quant ;
  data through_Prep : Cat.Prep ;
  data to_Prep : Cat.Prep ;
  data too_AdA : Common.AdA ;
  data under_Prep : Cat.Prep ;
  data very_AdA : Common.AdA ;
  data want_VV : Cat.VV ;
  data we_Pron : Cat.Pron ;
  data whatPl_IP : Cat.IP ;
  data whatSg_IP : Cat.IP ;
  data when_IAdv : Common.IAdv ;
  data when_Subj : Cat.Subj ;
  data where_IAdv : Common.IAdv ;
  data which_IQuant : Cat.IQuant ;
  data whoPl_IP : Cat.IP ;
  data whoSg_IP : Cat.IP ;
  data why_IAdv : Common.IAdv ;
  data with_Prep : Cat.Prep ;
  data without_Prep : Cat.Prep ;
  data yes_Utt : Common.Utt ;
  data youPl_Pron : Cat.Pron ;
  data youPol_Pron : Cat.Pron ;
  data youSg_Pron : Cat.Pron ;
}