/*
 * generated by Xtext
 */
package org.grammaticalframework.eclipse.ui;

import java.io.IOException;

import org.apache.log4j.Layout;
import org.apache.log4j.Logger;
import org.apache.log4j.PatternLayout;
import org.apache.log4j.RollingFileAppender;
import org.apache.log4j.WriterAppender;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.ui.console.MessageConsoleStream;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.generator.grammarAccess.GrammarAccessFragment;
import org.grammaticalframework.eclipse.ui.perspectives.GFPerspectiveFactory;

/**
 * Use this class to register components to be used within the IDE.
 */
public class GFUiModule extends org.grammaticalframework.eclipse.ui.AbstractGFUiModule {

	private static final String LOG_FILE_NAME = "gfep.log";
	
	private static final Logger log = Logger.getLogger("org.grammaticalframework.eclipse");

	public GFUiModule(AbstractUIPlugin plugin) {
		super(plugin);
		
		// Create GF console and direct logs into it
		MessageConsoleStream mcs = GFPerspectiveFactory.createConsole();
		Layout layout = new PatternLayout("[%d{yyyy-MM-dd HH:mm:ss}] %-5p %m%n");
		log.addAppender(new WriterAppender(layout, mcs));
		try {
			String logFileFull = ResourcesPlugin.getWorkspace().getRoot().getRawLocation().toOSString() + java.io.File.separator + LOG_FILE_NAME;
			RollingFileAppender logfile = new RollingFileAppender(layout, logFileFull);
			log.addAppender(logfile);
		} catch (IOException e) {
			log.warn(e.getMessage());
		}
	}
	
	public Class<? extends org.eclipse.xtext.ui.editor.preferences.LanguageRootPreferencePage> bindLanguageRootPreferencePage() {
		return org.grammaticalframework.eclipse.ui.editor.preferences.GFLanguageRootPreferencePage.class;
	}
	
	@Override
	public Class<? extends org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider> bindIOutlineTreeProvider() {
		return org.grammaticalframework.eclipse.ui.outline.GFOutlineTreeProvider.class;
	}
//	@Override
//	public Class<? extends org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider> bindIOutlineTreeStructureProvider() {
//		return org.grammaticalframework.eclipse.ui.outline.GFOutlineTreeProvider.class;
//	}

	
	public Class<? extends org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return org.grammaticalframework.eclipse.ui.editor.syntaxcoloring.GFHighlightingConfiguration.class;
	}
	public Class<? extends org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper> bindAbstractAntlrTokenToAttributeIdMapper() {
		return org.grammaticalframework.eclipse.ui.editor.syntaxcoloring.GFAntlrTokenToAttributeIdMapper.class;
	}
	
	// Remove the prompt for Xtext nature
	// Refer: http://www.eclipse.org/forums/index.php/mv/msg/173440/552043/#msg_552043
	@Override
	public Class<? extends org.eclipse.xtext.ui.editor.IXtextEditorCallback> bindIXtextEditorCallback() {
		return org.eclipse.xtext.ui.editor.validation.ValidatingEditorCallback.class;
	}
}
