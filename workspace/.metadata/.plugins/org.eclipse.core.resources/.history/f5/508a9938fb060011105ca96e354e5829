/**
 * GF Eclipse Plugin
 * http://www.grammaticalframework.org/eclipse/
 * John J. Camilleri, 2011
 * 
 * The research leading to these results has received funding from the
 * European Union's Seventh Framework Programme (FP7/2007-2013) under
 * grant agreement nÂ° FP7-ICT-247914.
 */
package org.grammaticalframework.eclipse.scoping;

import java.util.HashMap;
import java.util.Map;

/**
 * Represents a single "tag" entry in the GF-produced tags file, e.g.:
 * <pre>
 * {@code
 * AAdj	param-value	/.../ResEng.gf:75	Degree -> Case -> AForm
 * }
 * </pre>
 */
public class TagEntry {
	
	/**
	 * Record fields
	 */
	public String ident, type, file, args;
	public Integer line;
	
	/**
	 * Instantiates a new tag entry.
	 *
	 * @param elements The elements as extracted from the tags file, by String.split()
	 */
	public TagEntry(String line) {
		String[] elements = line.split("\t");
		switch (elements.length) {
		case 4:
			this.args = elements[3];
		case 3:
			this.file = elements[2];
			this.type = elements[1];
			this.ident = elements[0];
		}
	}
	
	/**
	 * Instantiates a new tag entry.
	 *
	 * @param ident the ident
	 * @param type the type
	 * @param file the file
	 * @param args the args
	 */
	public TagEntry(String ident, String type, String file, String args) {
		this.ident = ident;
		this.type = type;
		this.file = file;
		this.args = args;
	}
	
	public Map<String, String> getProperties() {
		HashMap<String, String> userData = new HashMap<String, String>();
		userData.put("ident", ident);
		userData.put("type", type);
		userData.put("location", type);
		userData.put("line", type);
		userData.put("args", args);
		return userData;
	}
}