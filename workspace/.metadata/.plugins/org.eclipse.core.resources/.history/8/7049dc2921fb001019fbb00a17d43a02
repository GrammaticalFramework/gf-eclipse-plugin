package org.grammaticalframework.eclipse.scoping;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.EcoreUtil2;
import org.grammaticalframework.eclipse.builder.GFBuilder;

/**
 * For resolving GF library modules and their exported definitions
 * 
 * @author John J. Camilleri
 *
 */
public class GFLibraryAgent {
	
	private String getHeaderPath(String moduleName) {
		return GFBuilder.BUILD_FOLDER + java.io.File.separator + moduleName + ".gfh"
	}
	
	/**
	 * Check if a module exists
	 * 
	 * @param from
	 * @param moduleName
	 * @return
	 */
	public URI getModuleURI(Resource from, String moduleName) {
		URI uri = URI.createURI( getHeaderPath(moduleName) );
		if (EcoreUtil2.isValidUri(from, uri))
			return uri;
		else
			return null;
	}
	
	
	public Resource getModuleResource(Resource from, String moduleName) {
		return EcoreUtil2.getResource(from, getHeaderPath(moduleName) );		
	}
	
	/**
	 * Check if a module exists
	 * 
	 * @param from
	 * @param moduleName
	 * @return
	 */
	public boolean moduleExists(Resource from, String moduleName) {
		return (getModuleURI(from, moduleName) != null);
	}
}
