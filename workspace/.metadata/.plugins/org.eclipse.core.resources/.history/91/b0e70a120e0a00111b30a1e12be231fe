/**
 * GF Eclipse Plugin
 * http://www.grammaticalframework.org/eclipse/
 * John J. Camilleri, 2011
 * 
 * The research leading to these results has received funding from the
 * European Union's Seventh Framework Programme (FP7/2007-2013) under
 * grant agreement nÂ° FP7-ICT-247914.
 */
package org.grammaticalframework.eclipse.scoping;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.emf.common.util.URI;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.resource.EObjectDescription;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;

import com.google.common.base.Function;
import com.google.common.base.Predicate;
import com.google.common.collect.Iterables;
import com.google.inject.Inject;

public class TagFileHelper {
	
	/**
	 * The library agent.
	 */
	@Inject
	private GFLibraryAgent libAgent = new GFLibraryAgent();
	
	/**
	 * For a given file, read and parse its tag file
	 * @param fileName
	 */
	public Iterable<TagEntry> getAllTags(File file) {
		return getTags(file, false);
	}
	public Iterable<TagEntry> getOwnTags(File file) {
		return getTags(file, true);
	}
	
	public Iterable<TagEntry> getTags(File file, boolean ownOnly) {
//		String filePath =  file.getRawLocation().toOSString(); // TODO What's the filepath format of tags on Windows machines?
		String filePath =  file.getAbsolutePath(); // TODO What's the filepath format of tags on Windows machines?
		ArrayList<TagEntry> tags = new ArrayList<TagEntry>(); 
		try {
			InputStream is = file.getContents();
			BufferedReader reader = new BufferedReader( new InputStreamReader(is) );
			String line;
			// Add everything into our arrays
			while ((line = reader.readLine()) != null) {
				TagEntry tag = new TagEntry(line);
				if (!ownOnly || tag.file.equals(filePath)) {
					tags.add(tag);
				}
			}
			reader.close();
			is.close();
		} catch (FileNotFoundException e) {
//			log.warn("Couldn't find tags file for " + moduleName);
//			return IScope.NULLSCOPE;
		} catch (IOException e) {
//			log.warn("Problem loading tags file for " + moduleName);
//			return IScope.NULLSCOPE;
		} catch (CoreException e) {
		}
		return tags;
	}
	

}
