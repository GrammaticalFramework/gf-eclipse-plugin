/*
* generated by Xtext
*/
grammar InternalGF;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.grammaticalframework.eclipse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.grammaticalframework.eclipse.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.grammaticalframework.eclipse.services.GFGrammarAccess;

}

@parser::members {

 	private GFGrammarAccess grammarAccess;
 	
    public InternalGFParser(TokenStream input, GFGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ModDef";	
   	}
   	
   	@Override
   	protected GFGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModDef
entryRuleModDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModDefRule()); }
	 iv_ruleModDef=ruleModDef 
	 { $current=$iv_ruleModDef.current; } 
	 EOF 
;

// Rule ModDef
ruleModDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_incomplete_0_0=	'incomplete' 
    {
        newLeafNode(lv_incomplete_0_0, grammarAccess.getModDefAccess().getIncompleteIncompleteKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModDefRule());
	        }
       		setWithLastConsumed($current, "incomplete", true, "incomplete");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModDefAccess().getTypeModTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleModType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ModType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModDefAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModDefAccess().getBodyModBodyParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleModBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModDefRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"ModBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModDefAccess().getSemicolonKeyword_4());
    }
)*)
;





// Entry rule entryRuleModType
entryRuleModType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModTypeRule()); }
	 iv_ruleModType=ruleModType 
	 { $current=$iv_ruleModType.current; } 
	 EOF 
;

// Rule ModType
ruleModType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_abstract_0_0=	'abstract' 
    {
        newLeafNode(lv_abstract_0_0, grammarAccess.getModTypeAccess().getAbstractAbstractKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModTypeRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getNameIdentParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_resource_2_0=	'resource' 
    {
        newLeafNode(lv_resource_2_0, grammarAccess.getModTypeAccess().getResourceResourceKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModTypeRule());
	        }
       		setWithLastConsumed($current, "resource", true, "resource");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getNameIdentParserRuleCall_1_1_0()); 
	    }
		lv_name_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_interface_4_0=	'interface' 
    {
        newLeafNode(lv_interface_4_0, grammarAccess.getModTypeAccess().getInterfaceInterfaceKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModTypeRule());
	        }
       		setWithLastConsumed($current, "interface", true, "interface");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getNameIdentParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_concrete_6_0=	'concrete' 
    {
        newLeafNode(lv_concrete_6_0, grammarAccess.getModTypeAccess().getConcreteConcreteKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModTypeRule());
	        }
       		setWithLastConsumed($current, "concrete", true, "concrete");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getNameIdentParserRuleCall_3_1_0()); 
	    }
		lv_name_7_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='of' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModTypeAccess().getOfKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getAbstractNameIdentParserRuleCall_3_3_0()); 
	    }
		lv_abstractName_9_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"abstractName",
        		lv_abstractName_9_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_instance_10_0=	'instance' 
    {
        newLeafNode(lv_instance_10_0, grammarAccess.getModTypeAccess().getInstanceInstanceKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModTypeRule());
	        }
       		setWithLastConsumed($current, "instance", true, "instance");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getNameIdentParserRuleCall_4_1_0()); 
	    }
		lv_name_11_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='of' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModTypeAccess().getOfKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModTypeAccess().getInterfaceIncludeIncludedParserRuleCall_4_3_0()); 
	    }
		lv_interfaceInclude_13_0=ruleIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModTypeRule());
	        }
       		set(
       			$current, 
       			"interfaceInclude",
        		lv_interfaceInclude_13_0, 
        		"Included");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleModBody
entryRuleModBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModBodyRule()); }
	 iv_ruleModBody=ruleModBody 
	 { $current=$iv_ruleModBody.current; } 
	 EOF 
;

// Rule ModBody
ruleModBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getExtendListListIncludedParserRuleCall_0_0_0()); 
	    }
		lv_extendList_0_0=ruleListIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"extendList",
        		lv_extendList_0_0, 
        		"ListIncluded");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='**' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModBodyAccess().getAsteriskAsteriskKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getFunctorIncludedParserRuleCall_0_1_1_0()); 
	    }
		lv_functor_2_0=ruleIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"functor",
        		lv_functor_2_0, 
        		"Included");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_functorInstantiation_3_0=	'with' 
    {
        newLeafNode(lv_functorInstantiation_3_0, grammarAccess.getModBodyAccess().getFunctorInstantiationWithKeyword_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModBodyRule());
	        }
       		setWithLastConsumed($current, "functorInstantiation", true, "with");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getInstantiationListListInstParserRuleCall_0_1_3_0()); 
	    }
		lv_instantiationList_4_0=ruleListInst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"instantiationList",
        		lv_instantiationList_4_0, 
        		"ListInst");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='**' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModBodyAccess().getAsteriskAsteriskKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getModContentModContentParserRuleCall_0_2_1_0()); 
	    }
		lv_modContent_6_0=ruleModContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"modContent",
        		lv_modContent_6_0, 
        		"ModContent");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getFunctorIncludedParserRuleCall_1_0_0()); 
	    }
		lv_functor_7_0=ruleIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"functor",
        		lv_functor_7_0, 
        		"Included");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_functorInstantiation_8_0=	'with' 
    {
        newLeafNode(lv_functorInstantiation_8_0, grammarAccess.getModBodyAccess().getFunctorInstantiationWithKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModBodyRule());
	        }
       		setWithLastConsumed($current, "functorInstantiation", true, "with");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getInstantiationListListInstParserRuleCall_1_2_0()); 
	    }
		lv_instantiationList_9_0=ruleListInst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"instantiationList",
        		lv_instantiationList_9_0, 
        		"ListInst");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='**' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getModBodyAccess().getAsteriskAsteriskKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getModContentModContentParserRuleCall_1_3_1_0()); 
	    }
		lv_modContent_11_0=ruleModContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"modContent",
        		lv_modContent_11_0, 
        		"ModContent");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModBodyAccess().getModContentModContentParserRuleCall_2_0()); 
	    }
		lv_modContent_12_0=ruleModContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModBodyRule());
	        }
       		set(
       			$current, 
       			"modContent",
        		lv_modContent_12_0, 
        		"ModContent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModContent
entryRuleModContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModContentRule()); }
	 iv_ruleModContent=ruleModContent 
	 { $current=$iv_ruleModContent.current; } 
	 EOF 
;

// Rule ModContent
ruleModContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModContentAccess().getModContentAction_0_0(),
            $current);
    }
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModContentAccess().getLeftCurlyBracketKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModContentAccess().getJudgementsTopDefParserRuleCall_0_1_1_0()); 
	    }
		lv_judgements_2_0=ruleTopDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModContentRule());
	        }
       		add(
       			$current, 
       			"judgements",
        		lv_judgements_2_0, 
        		"TopDef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModContentAccess().getRightCurlyBracketKeyword_0_1_2());
    }
)?)
    |(	otherlv_4='open' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModContentAccess().getOpenKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModContentAccess().getOpenListListOpenParserRuleCall_1_1_0()); 
	    }
		lv_openList_5_0=ruleListOpen		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModContentRule());
	        }
       		set(
       			$current, 
       			"openList",
        		lv_openList_5_0, 
        		"ListOpen");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='in' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModContentAccess().getInKeyword_1_2_0());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModContentAccess().getLeftCurlyBracketKeyword_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModContentAccess().getJudgementsTopDefParserRuleCall_1_2_2_0()); 
	    }
		lv_judgements_8_0=ruleTopDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModContentRule());
	        }
       		add(
       			$current, 
       			"judgements",
        		lv_judgements_8_0, 
        		"TopDef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModContentAccess().getRightCurlyBracketKeyword_1_2_3());
    }
)?))
;





// Entry rule entryRuleListOpen
entryRuleListOpen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListOpenRule()); }
	 iv_ruleListOpen=ruleListOpen 
	 { $current=$iv_ruleListOpen.current; } 
	 EOF 
;

// Rule ListOpen
ruleListOpen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListOpenAccess().getOpensOpenParserRuleCall_0_0()); 
	    }
		lv_opens_0_0=ruleOpen		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListOpenRule());
	        }
       		add(
       			$current, 
       			"opens",
        		lv_opens_0_0, 
        		"Open");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListOpenAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListOpenAccess().getOpensOpenParserRuleCall_1_1_0()); 
	    }
		lv_opens_2_0=ruleOpen		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListOpenRule());
	        }
       		add(
       			$current, 
       			"opens",
        		lv_opens_2_0, 
        		"Open");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpen
entryRuleOpen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpenRule()); }
	 iv_ruleOpen=ruleOpen 
	 { $current=$iv_ruleOpen.current; } 
	 EOF 
;

// Rule Open
ruleOpen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpenAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpenRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpenAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpenAccess().getAliasIdentParserRuleCall_1_1_0()); 
	    }
		lv_alias_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpenRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOpenAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpenAccess().getNameIdentParserRuleCall_1_3_0()); 
	    }
		lv_name_4_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpenRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOpenAccess().getRightParenthesisKeyword_1_4());
    }
))
;





// Entry rule entryRuleListInst
entryRuleListInst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListInstRule()); }
	 iv_ruleListInst=ruleListInst 
	 { $current=$iv_ruleListInst.current; } 
	 EOF 
;

// Rule ListInst
ruleListInst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListInstAccess().getInstantiationsInstParserRuleCall_0_0()); 
	    }
		lv_instantiations_0_0=ruleInst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListInstRule());
	        }
       		add(
       			$current, 
       			"instantiations",
        		lv_instantiations_0_0, 
        		"Inst");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListInstAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListInstAccess().getInstantiationsInstParserRuleCall_1_1_0()); 
	    }
		lv_instantiations_2_0=ruleInst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListInstRule());
	        }
       		add(
       			$current, 
       			"instantiations",
        		lv_instantiations_2_0, 
        		"Inst");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInst
entryRuleInst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstRule()); }
	 iv_ruleInst=ruleInst 
	 { $current=$iv_ruleInst.current; } 
	 EOF 
;

// Rule Inst
ruleInst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAccess().getInterfaceIdentParserRuleCall_1_0()); 
	    }
		lv_interface_1_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstRule());
	        }
       		set(
       			$current, 
       			"interface",
        		lv_interface_1_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstAccess().getNameIdentParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleListIncluded
entryRuleListIncluded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListIncludedRule()); }
	 iv_ruleListIncluded=ruleListIncluded 
	 { $current=$iv_ruleListIncluded.current; } 
	 EOF 
;

// Rule ListIncluded
ruleListIncluded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListIncludedAccess().getIncludedIncludedParserRuleCall_0_0()); 
	    }
		lv_included_0_0=ruleIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListIncludedRule());
	        }
       		add(
       			$current, 
       			"included",
        		lv_included_0_0, 
        		"Included");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListIncludedAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListIncludedAccess().getIncludedIncludedParserRuleCall_1_1_0()); 
	    }
		lv_included_2_0=ruleIncluded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListIncludedRule());
	        }
       		add(
       			$current, 
       			"included",
        		lv_included_2_0, 
        		"Included");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIncluded
entryRuleIncluded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludedRule()); }
	 iv_ruleIncluded=ruleIncluded 
	 { $current=$iv_ruleIncluded.current; } 
	 EOF 
;

// Rule Included
ruleIncluded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getNameIdentParserRuleCall_1_0_0()); 
	    }
		lv_name_1_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_inclusive_2_0=	'[' 
    {
        newLeafNode(lv_inclusive_2_0, grammarAccess.getIncludedAccess().getInclusiveLeftSquareBracketKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludedRule());
	        }
       		setWithLastConsumed($current, "inclusive", true, "[");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getIncludesIdentParserRuleCall_1_2_0()); 
	    }
		lv_includes_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIncludedAccess().getCommaKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getIncludesIdentParserRuleCall_1_3_1_0()); 
	    }
		lv_includes_5_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_5_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIncludedAccess().getRightSquareBracketKeyword_1_4());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getNameIdentParserRuleCall_2_0_0()); 
	    }
		lv_name_7_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_exclusive_8_0=	'-' 
    {
        newLeafNode(lv_exclusive_8_0, grammarAccess.getIncludedAccess().getExclusiveHyphenMinusKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludedRule());
	        }
       		setWithLastConsumed($current, "exclusive", true, "-");
	    }

)
)	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIncludedAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getExcludesIdentParserRuleCall_2_3_0()); 
	    }
		lv_excludes_10_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		add(
       			$current, 
       			"excludes",
        		lv_excludes_10_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIncludedAccess().getCommaKeyword_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludedAccess().getExcludesIdentParserRuleCall_2_4_1_0()); 
	    }
		lv_excludes_12_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludedRule());
	        }
       		add(
       			$current, 
       			"excludes",
        		lv_excludes_12_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIncludedAccess().getRightSquareBracketKeyword_2_5());
    }
))
;





// Entry rule entryRuleTopDef
entryRuleTopDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopDefRule()); }
	 iv_ruleTopDef=ruleTopDef 
	 { $current=$iv_ruleTopDef.current; } 
	 EOF 
;

// Rule TopDef
ruleTopDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_cat_0_0=	'cat' 
    {
        newLeafNode(lv_cat_0_0, grammarAccess.getTopDefAccess().getCatCatKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "cat", true, "cat");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsCatDefParserRuleCall_0_1_0_0()); 
	    }
		lv_definitions_1_0=ruleCatDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_1_0, 
        		"CatDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTopDefAccess().getSemicolonKeyword_0_1_1());
    }
)+)
    |((
(
		lv_fun_3_0=	'fun' 
    {
        newLeafNode(lv_fun_3_0, grammarAccess.getTopDefAccess().getFunFunKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "fun", true, "fun");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsFunDefParserRuleCall_1_1_0_0()); 
	    }
		lv_definitions_4_0=ruleFunDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_4_0, 
        		"FunDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTopDefAccess().getSemicolonKeyword_1_1_1());
    }
)+)
    |((
(
		lv_def_6_0=	'def' 
    {
        newLeafNode(lv_def_6_0, grammarAccess.getTopDefAccess().getDefDefKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "def", true, "def");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsDefDefParserRuleCall_2_1_0_0()); 
	    }
		lv_definitions_7_0=ruleDefDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_7_0, 
        		"DefDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTopDefAccess().getSemicolonKeyword_2_1_1());
    }
)+)
    |((
(
		lv_data_9_0=	'data' 
    {
        newLeafNode(lv_data_9_0, grammarAccess.getTopDefAccess().getDataDataKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "data", true, "data");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsDataDefParserRuleCall_3_1_0_0()); 
	    }
		lv_definitions_10_0=ruleDataDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_10_0, 
        		"DataDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTopDefAccess().getSemicolonKeyword_3_1_1());
    }
)+)
    |((
(
		lv_param_12_0=	'param' 
    {
        newLeafNode(lv_param_12_0, grammarAccess.getTopDefAccess().getParamParamKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "param", true, "param");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsParamDefParserRuleCall_4_1_0_0()); 
	    }
		lv_definitions_13_0=ruleParamDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_13_0, 
        		"ParamDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTopDefAccess().getSemicolonKeyword_4_1_1());
    }
)+)
    |((
(
		lv_oper_15_0=	'oper' 
    {
        newLeafNode(lv_oper_15_0, grammarAccess.getTopDefAccess().getOperOperKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "oper", true, "oper");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsOperDefParserRuleCall_5_1_0_0()); 
	    }
		lv_definitions_16_0=ruleOperDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_16_0, 
        		"OperDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTopDefAccess().getSemicolonKeyword_5_1_1());
    }
)+)
    |((
(
		lv_lincat_18_0=	'lincat' 
    {
        newLeafNode(lv_lincat_18_0, grammarAccess.getTopDefAccess().getLincatLincatKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "lincat", true, "lincat");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsTermDefParserRuleCall_6_1_0_0()); 
	    }
		lv_definitions_19_0=ruleTermDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_19_0, 
        		"TermDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getTopDefAccess().getSemicolonKeyword_6_1_1());
    }
)+)
    |((
(
		lv_lindef_21_0=	'lindef' 
    {
        newLeafNode(lv_lindef_21_0, grammarAccess.getTopDefAccess().getLindefLindefKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "lindef", true, "lindef");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsTermDefParserRuleCall_7_1_0_0()); 
	    }
		lv_definitions_22_0=ruleTermDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_22_0, 
        		"TermDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getTopDefAccess().getSemicolonKeyword_7_1_1());
    }
)+)
    |((
(
		lv_lin_24_0=	'lin' 
    {
        newLeafNode(lv_lin_24_0, grammarAccess.getTopDefAccess().getLinLinKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "lin", true, "lin");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsLinDefParserRuleCall_8_1_0_0()); 
	    }
		lv_definitions_25_0=ruleLinDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_25_0, 
        		"LinDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_26=';' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getTopDefAccess().getSemicolonKeyword_8_1_1());
    }
)+)
    |((
(
		lv_printname_27_0=	'printname' 
    {
        newLeafNode(lv_printname_27_0, grammarAccess.getTopDefAccess().getPrintnamePrintnameKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "printname", true, "printname");
	    }

)
)	otherlv_28='cat' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getTopDefAccess().getCatKeyword_9_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsTermDefParserRuleCall_9_2_0_0()); 
	    }
		lv_definitions_29_0=ruleTermDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_29_0, 
        		"TermDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_30=';' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getTopDefAccess().getSemicolonKeyword_9_2_1());
    }
)+)
    |((
(
		lv_printname_31_0=	'printname' 
    {
        newLeafNode(lv_printname_31_0, grammarAccess.getTopDefAccess().getPrintnamePrintnameKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "printname", true, "printname");
	    }

)
)	otherlv_32='fun' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getTopDefAccess().getFunKeyword_10_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsTermDefParserRuleCall_10_2_0_0()); 
	    }
		lv_definitions_33_0=ruleTermDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_33_0, 
        		"TermDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_34=';' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getTopDefAccess().getSemicolonKeyword_10_2_1());
    }
)+)
    |((
(
		lv_flags_35_0=	'flags' 
    {
        newLeafNode(lv_flags_35_0, grammarAccess.getTopDefAccess().getFlagsFlagsKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopDefRule());
	        }
       		setWithLastConsumed($current, "flags", true, "flags");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTopDefAccess().getDefinitionsFlagDefParserRuleCall_11_1_0_0()); 
	    }
		lv_definitions_36_0=ruleFlagDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopDefRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_36_0, 
        		"FlagDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_37=';' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getTopDefAccess().getSemicolonKeyword_11_1_1());
    }
)+))
;





// Entry rule entryRuleCatDef
entryRuleCatDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCatDefRule()); }
	 iv_ruleCatDef=ruleCatDef 
	 { $current=$iv_ruleCatDef.current; } 
	 EOF 
;

// Rule CatDef
ruleCatDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCatDefAccess().getNameIdentParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCatDefAccess().getContextDDeclParserRuleCall_0_1_0()); 
	    }
		lv_context_1_0=ruleDDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatDefRule());
	        }
       		add(
       			$current, 
       			"context",
        		lv_context_1_0, 
        		"DDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |((
(
		lv_list_2_0=	'[' 
    {
        newLeafNode(lv_list_2_0, grammarAccess.getCatDefAccess().getListLeftSquareBracketKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCatDefRule());
	        }
       		setWithLastConsumed($current, "list", true, "[");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCatDefAccess().getNameIdentParserRuleCall_1_1_0()); 
	    }
		lv_name_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCatDefAccess().getContextDDeclParserRuleCall_1_2_0()); 
	    }
		lv_context_4_0=ruleDDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCatDefRule());
	        }
       		add(
       			$current, 
       			"context",
        		lv_context_4_0, 
        		"DDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCatDefAccess().getRightSquareBracketKeyword_1_3());
    }
(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCatDefAccess().getLeftCurlyBracketKeyword_1_4_0());
    }
(
(
		lv_size_7_0=RULE_INTEGER
		{
			newLeafNode(lv_size_7_0, grammarAccess.getCatDefAccess().getSizeIntegerTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCatDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_7_0, 
        		"Integer");
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCatDefAccess().getRightCurlyBracketKeyword_1_4_2());
    }
)?))
;





// Entry rule entryRuleFunDef
entryRuleFunDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunDefRule()); }
	 iv_ruleFunDef=ruleFunDef 
	 { $current=$iv_ruleFunDef.current; } 
	 EOF 
;

// Rule FunDef
ruleFunDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunDefAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunDefAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunDefAccess().getNameIdentParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunDefAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunDefAccess().getTypeExpParserRuleCall_3_0()); 
	    }
		lv_type_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDefDef
entryRuleDefDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefDefRule()); }
	 iv_ruleDefDef=ruleDefDef 
	 { $current=$iv_ruleDefDef.current; } 
	 EOF 
;

// Rule DefDef
ruleDefDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getNameNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefDefAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getNameNameParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefDefAccess().getEqualsSignKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getDefinitionExpParserRuleCall_0_3_0()); 
	    }
		lv_definition_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getNameNameParserRuleCall_1_0_0()); 
	    }
		lv_name_5_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getPatternListListPattParserRuleCall_1_1_0()); 
	    }
		lv_patternList_6_0=ruleListPatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		set(
       			$current, 
       			"patternList",
        		lv_patternList_6_0, 
        		"ListPatt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDefDefAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefDefAccess().getDefinitionExpParserRuleCall_1_3_0()); 
	    }
		lv_definition_8_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_8_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDataDef
entryRuleDataDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataDefRule()); }
	 iv_ruleDataDef=ruleDataDef 
	 { $current=$iv_ruleDataDef.current; } 
	 EOF 
;

// Rule DataDef
ruleDataDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getNameIdentParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataDefAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getConstructorsIdentParserRuleCall_0_2_0()); 
	    }
		lv_constructors_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataDefAccess().getVerticalLineKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getConstructorsIdentParserRuleCall_0_3_1_0()); 
	    }
		lv_constructors_4_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_4_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getNameIdentParserRuleCall_1_0_0()); 
	    }
		lv_name_5_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataDefAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getNameIdentParserRuleCall_1_1_1_0()); 
	    }
		lv_name_7_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataDefAccess().getColonKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefAccess().getTypeExpParserRuleCall_1_3_0()); 
	    }
		lv_type_9_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_9_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleParamDef
entryRuleParamDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamDefRule()); }
	 iv_ruleParamDef=ruleParamDef 
	 { $current=$iv_ruleParamDef.current; } 
	 EOF 
;

// Rule ParamDef
ruleParamDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParamDefAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParamDefAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParamDefAccess().getConstructorsParConstrParserRuleCall_1_1_0()); 
	    }
		lv_constructors_2_0=ruleParConstr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamDefRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_2_0, 
        		"ParConstr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParamDefAccess().getVerticalLineKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParamDefAccess().getConstructorsParConstrParserRuleCall_1_2_1_0()); 
	    }
		lv_constructors_4_0=ruleParConstr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamDefRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_4_0, 
        		"ParConstr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleOperDef
entryRuleOperDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperDefRule()); }
	 iv_ruleOperDef=ruleOperDef 
	 { $current=$iv_ruleOperDef.current; } 
	 EOF 
;

// Rule OperDef
ruleOperDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperDefAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperDefAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getTypeExpParserRuleCall_0_3_0()); 
	    }
		lv_type_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperDefAccess().getEqualsSignKeyword_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getDefinitionExpParserRuleCall_0_4_1_0()); 
	    }
		lv_definition_6_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_6_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_1_0_0()); 
	    }
		lv_name_7_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperDefAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_1_1_1_0()); 
	    }
		lv_name_9_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOperDefAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getDefinitionExpParserRuleCall_1_3_0()); 
	    }
		lv_definition_11_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_11_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_2_0_0()); 
	    }
		lv_name_12_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_12_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getArgsArgParserRuleCall_2_1_0()); 
	    }
		lv_args_13_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_13_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOperDefAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getDefinitionExpParserRuleCall_2_3_0()); 
	    }
		lv_definition_15_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_15_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_3_0_0()); 
	    }
		lv_name_16_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_16_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOperDefAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_3_1_1_0()); 
	    }
		lv_name_18_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_18_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOperDefAccess().getColonKeyword_3_2());
    }
(
(
		lv_overload_20_0=	'overload' 
    {
        newLeafNode(lv_overload_20_0, grammarAccess.getOperDefAccess().getOverloadOverloadKeyword_3_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperDefRule());
	        }
       		setWithLastConsumed($current, "overload", true, "overload");
	    }

)
)	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getOperDefAccess().getLeftCurlyBracketKeyword_3_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getOverloadsOperDefInnerTypeParserRuleCall_3_5_0()); 
	    }
		lv_overloads_22_0=ruleOperDefInnerType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"overloads",
        		lv_overloads_22_0, 
        		"OperDefInnerType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getOperDefAccess().getSemicolonKeyword_3_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getOverloadsOperDefInnerTypeParserRuleCall_3_6_1_0()); 
	    }
		lv_overloads_24_0=ruleOperDefInnerType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"overloads",
        		lv_overloads_24_0, 
        		"OperDefInnerType");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_25=';' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getOperDefAccess().getSemicolonKeyword_3_7());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getOperDefAccess().getRightCurlyBracketKeyword_3_8());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_4_0_0()); 
	    }
		lv_name_27_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_27_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_28=',' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getOperDefAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getNameNameParserRuleCall_4_1_1_0()); 
	    }
		lv_name_29_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_29_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_30='=' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getOperDefAccess().getEqualsSignKeyword_4_2());
    }
(
(
		lv_overload_31_0=	'overload' 
    {
        newLeafNode(lv_overload_31_0, grammarAccess.getOperDefAccess().getOverloadOverloadKeyword_4_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperDefRule());
	        }
       		setWithLastConsumed($current, "overload", true, "overload");
	    }

)
)	otherlv_32='{' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getOperDefAccess().getLeftCurlyBracketKeyword_4_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getOverloadsOperDefInnerDefParserRuleCall_4_5_0()); 
	    }
		lv_overloads_33_0=ruleOperDefInnerDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"overloads",
        		lv_overloads_33_0, 
        		"OperDefInnerDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_34=';' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getOperDefAccess().getSemicolonKeyword_4_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefAccess().getOverloadsOperDefInnerDefParserRuleCall_4_6_1_0()); 
	    }
		lv_overloads_35_0=ruleOperDefInnerDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefRule());
	        }
       		add(
       			$current, 
       			"overloads",
        		lv_overloads_35_0, 
        		"OperDefInnerDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_36=';' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getOperDefAccess().getSemicolonKeyword_4_7());
    }
)?	otherlv_37='}' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getOperDefAccess().getRightCurlyBracketKeyword_4_8());
    }
))
;





// Entry rule entryRuleOperDefInnerType
entryRuleOperDefInnerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperDefInnerTypeRule()); }
	 iv_ruleOperDefInnerType=ruleOperDefInnerType 
	 { $current=$iv_ruleOperDefInnerType.current; } 
	 EOF 
;

// Rule OperDefInnerType
ruleOperDefInnerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerTypeAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerTypeRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperDefInnerTypeAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerTypeAccess().getNameNameParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerTypeRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperDefInnerTypeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerTypeAccess().getTypeExpParserRuleCall_3_0()); 
	    }
		lv_type_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOperDefInnerDef
entryRuleOperDefInnerDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperDefInnerDefRule()); }
	 iv_ruleOperDefInnerDef=ruleOperDefInnerDef 
	 { $current=$iv_ruleOperDefInnerDef.current; } 
	 EOF 
;

// Rule OperDefInnerDef
ruleOperDefInnerDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerDefAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperDefInnerDefAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerDefAccess().getNameNameParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperDefInnerDefAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerDefAccess().getTypeExpParserRuleCall_3_0()); 
	    }
		lv_type_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperDefInnerDefAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperDefInnerDefAccess().getDefinitionExpParserRuleCall_5_0()); 
	    }
		lv_definition_6_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperDefInnerDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_6_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLinDef
entryRuleLinDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinDefRule()); }
	 iv_ruleLinDef=ruleLinDef 
	 { $current=$iv_ruleLinDef.current; } 
	 EOF 
;

// Rule LinDef
ruleLinDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getNameNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinDefAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getNameNameParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinDefAccess().getEqualsSignKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getDefinitionExpParserRuleCall_0_3_0()); 
	    }
		lv_definition_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getNameNameParserRuleCall_1_0_0()); 
	    }
		lv_name_5_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getArgsArgParserRuleCall_1_1_0()); 
	    }
		lv_args_6_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_6_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinDefAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinDefAccess().getDefinitionExpParserRuleCall_1_3_0()); 
	    }
		lv_definition_8_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_8_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleTermDef
entryRuleTermDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermDefRule()); }
	 iv_ruleTermDef=ruleTermDef 
	 { $current=$iv_ruleTermDef.current; } 
	 EOF 
;

// Rule TermDef
ruleTermDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermDefAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermDefAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermDefAccess().getNameNameParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermDefAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermDefAccess().getDefinitionExpParserRuleCall_3_0()); 
	    }
		lv_definition_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDefRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFlagDef
entryRuleFlagDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlagDefRule()); }
	 iv_ruleFlagDef=ruleFlagDef 
	 { $current=$iv_ruleFlagDef.current; } 
	 EOF 
;

// Rule FlagDef
ruleFlagDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFlagDefAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlagDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFlagDefAccess().getEqualsSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFlagDefAccess().getValueIdentParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlagDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_strValue_3_0=RULE_STRING
		{
			newLeafNode(lv_strValue_3_0, grammarAccess.getFlagDefAccess().getStrValueStringTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlagDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"strValue",
        		lv_strValue_3_0, 
        		"String");
	    }

)
)))
;





// Entry rule entryRuleParConstr
entryRuleParConstr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParConstrRule()); }
	 iv_ruleParConstr=ruleParConstr 
	 { $current=$iv_ruleParConstr.current; } 
	 EOF 
;

// Rule ParConstr
ruleParConstr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParConstrAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParConstrRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParConstrAccess().getConstructorsDDeclParserRuleCall_1_0()); 
	    }
		lv_constructors_1_0=ruleDDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParConstrRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_1_0, 
        		"DDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNameAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNameAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameAccess().getNameIdentParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNameAccess().getRightSquareBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleLocDef
entryRuleLocDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocDefRule()); }
	 iv_ruleLocDef=ruleLocDef 
	 { $current=$iv_ruleLocDef.current; } 
	 EOF 
;

// Rule LocDef
ruleLocDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getNameIdentParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocDefAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getNameIdentParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLocDefAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getTypeExpParserRuleCall_0_3_0()); 
	    }
		lv_type_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLocDefAccess().getEqualsSignKeyword_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getValueExpParserRuleCall_0_4_1_0()); 
	    }
		lv_value_6_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getNameIdentParserRuleCall_1_0_0()); 
	    }
		lv_name_7_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLocDefAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getNameIdentParserRuleCall_1_1_1_0()); 
	    }
		lv_name_9_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLocDefAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocDefAccess().getValueExpParserRuleCall_1_3_0()); 
	    }
		lv_value_11_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_11_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleListLocDef
entryRuleListLocDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListLocDefRule()); }
	 iv_ruleListLocDef=ruleListLocDef 
	 { $current=$iv_ruleListLocDef.current; } 
	 EOF 
;

// Rule ListLocDef
ruleListLocDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListLocDefAccess().getListLocDefAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getListLocDefAccess().getLocalDefinitionsLocDefParserRuleCall_1_0_0()); 
	    }
		lv_localDefinitions_1_0=ruleLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLocDefRule());
	        }
       		add(
       			$current, 
       			"localDefinitions",
        		lv_localDefinitions_1_0, 
        		"LocDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListLocDefAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLocDefAccess().getLocalDefinitionsLocDefParserRuleCall_1_1_1_0()); 
	    }
		lv_localDefinitions_3_0=ruleLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLocDefRule());
	        }
       		add(
       			$current, 
       			"localDefinitions",
        		lv_localDefinitions_3_0, 
        		"LocDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListLocDefAccess().getSemicolonKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	 iv_ruleExp=ruleExp 
	 { $current=$iv_ruleExp.current; } 
	 EOF 
;

// Rule Exp
ruleExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpAccess().getExpLF_Exp1or3ParserRuleCall_0()); 
    }
    this_ExpLF_Exp1or3_0=ruleExpLF_Exp1or3
    { 
        $current = $this_ExpLF_Exp1or3_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
(
		lv_funAbstraction_1_0=	'\\' 
    {
        newLeafNode(lv_funAbstraction_1_0, grammarAccess.getExpAccess().getFunAbstractionReverseSolidusKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpRule());
	        }
       		setWithLastConsumed($current, "funAbstraction", true, "\\");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getBindListListBindParserRuleCall_1_1_0()); 
	    }
		lv_bindList_2_0=ruleListBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"bindList",
        		lv_bindList_2_0, 
        		"ListBind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpAccess().getHyphenMinusGreaterThanSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_1_3_0()); 
	    }
		lv_right_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_tableAbstracttion_5_0=	'\\\\' 
    {
        newLeafNode(lv_tableAbstracttion_5_0, grammarAccess.getExpAccess().getTableAbstracttionReverseSolidusReverseSolidusKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpRule());
	        }
       		setWithLastConsumed($current, "tableAbstracttion", true, "\\\\");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getBindListListBindParserRuleCall_2_1_0()); 
	    }
		lv_bindList_6_0=ruleListBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"bindList",
        		lv_bindList_6_0, 
        		"ListBind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='=>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpAccess().getEqualsSignGreaterThanSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_2_3_0()); 
	    }
		lv_right_8_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_8_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExpAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getBindListListBindParserRuleCall_3_1_0()); 
	    }
		lv_bindList_10_0=ruleListBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"bindList",
        		lv_bindList_10_0, 
        		"ListBind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExpAccess().getColonKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getDeclExpParserRuleCall_3_3_0()); 
	    }
		lv_decl_12_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"decl",
        		lv_decl_12_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExpAccess().getRightParenthesisKeyword_3_4());
    }
	otherlv_14='->' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getExpAccess().getHyphenMinusGreaterThanSignKeyword_3_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_3_6_0()); 
	    }
		lv_right_15_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_15_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_16='let' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExpAccess().getLetKeyword_4_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getExpAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getDefListListLocDefParserRuleCall_4_2_0()); 
	    }
		lv_defList_18_0=ruleListLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"defList",
        		lv_defList_18_0, 
        		"ListLocDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getExpAccess().getRightCurlyBracketKeyword_4_3());
    }
	otherlv_20='in' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getExpAccess().getInKeyword_4_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_4_5_0()); 
	    }
		lv_right_21_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_21_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_22='let' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getExpAccess().getLetKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getDefListListLocDefParserRuleCall_5_1_0()); 
	    }
		lv_defList_23_0=ruleListLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"defList",
        		lv_defList_23_0, 
        		"ListLocDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24='in' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getExpAccess().getInKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_5_3_0()); 
	    }
		lv_right_25_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_25_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_26='in' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getExpAccess().getInKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getLeftExp5ParserRuleCall_6_1_0()); 
	    }
		lv_left_27_0=ruleExp5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_27_0, 
        		"Exp5");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_str_28_0=RULE_STRING
		{
			newLeafNode(lv_str_28_0, grammarAccess.getExpAccess().getStrStringTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_28_0, 
        		"String");
	    }

)
)))
;





// Entry rule entryRuleExpLF_Exp1or3
entryRuleExpLF_Exp1or3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpLF_Exp1or3Rule()); }
	 iv_ruleExpLF_Exp1or3=ruleExpLF_Exp1or3 
	 { $current=$iv_ruleExpLF_Exp1or3.current; } 
	 EOF 
;

// Rule ExpLF_Exp1or3
ruleExpLF_Exp1or3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpLF_Exp1or3Access().getExp3ParserRuleCall_0()); 
    }
    this_Exp3_0=ruleExp3
    { 
        $current = $this_Exp3_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpLF_Exp1or3Access().getExpLF13LeftAction_1_0_0_0(),
            $current);
    }
)((
(
		lv_tokenListCat_2_0=	'++' 
    {
        newLeafNode(lv_tokenListCat_2_0, grammarAccess.getExpLF_Exp1or3Access().getTokenListCatPlusSignPlusSignKeyword_1_0_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpLF_Exp1or3Rule());
	        }
       		setWithLastConsumed($current, "tokenListCat", true, "++");
	    }

)
)
    |(
(
		lv_tokenGlue_3_0=	'+' 
    {
        newLeafNode(lv_tokenGlue_3_0, grammarAccess.getExpLF_Exp1or3Access().getTokenGluePlusSignKeyword_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpLF_Exp1or3Rule());
	        }
       		setWithLastConsumed($current, "tokenGlue", true, "+");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_Exp1or3Access().getRightExp3ParserRuleCall_1_0_0_2_0()); 
	    }
		lv_right_4_0=ruleExp3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_Exp1or3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Exp3");
	        afterParserOrEnumRuleCall();
	    }

)
))*((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpLF_Exp1or3Access().getExpLF13LeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_6='|' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpLF_Exp1or3Access().getVerticalLineKeyword_1_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_Exp1or3Access().getRightExpParserRuleCall_1_0_1_2_0()); 
	    }
		lv_right_7_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_Exp1or3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpLF_Exp1or3Access().getExpLF13LeftAction_1_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_Exp1or3Access().getRightExpLF_AfterExp3ParserRuleCall_1_1_1_0()); 
	    }
		lv_right_9_0=ruleExpLF_AfterExp3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_Exp1or3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"ExpLF_AfterExp3");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleExpLF_AfterExp3
entryRuleExpLF_AfterExp3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpLF_AfterExp3Rule()); }
	 iv_ruleExpLF_AfterExp3=ruleExpLF_AfterExp3 
	 { $current=$iv_ruleExpLF_AfterExp3.current; } 
	 EOF 
;

// Rule ExpLF_AfterExp3
ruleExpLF_AfterExp3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='->' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpLF_AfterExp3Access().getHyphenMinusGreaterThanSignKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_AfterExp3Access().getRightExpParserRuleCall_0_1_0()); 
	    }
		lv_right_1_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_AfterExp3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_1_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpLF_AfterExp3Access().getEqualsSignGreaterThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_AfterExp3Access().getRightExpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_AfterExp3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpLF_AfterExp3Access().getWhereKeyword_2_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpLF_AfterExp3Access().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpLF_AfterExp3Access().getDefListListLocDefParserRuleCall_2_2_0()); 
	    }
		lv_defList_6_0=ruleListLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpLF_AfterExp3Rule());
	        }
       		set(
       			$current, 
       			"defList",
        		lv_defList_6_0, 
        		"ListLocDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpLF_AfterExp3Access().getRightCurlyBracketKeyword_2_3());
    }
))
;







// Entry rule entryRuleExp2
entryRuleExp2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp2Rule()); }
	 iv_ruleExp2=ruleExp2 
	 { $current=$iv_ruleExp2.current; } 
	 EOF 
;

// Rule Exp2
ruleExp2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExp2Access().getExp3ParserRuleCall_0()); 
    }
    this_Exp3_0=ruleExp3
    { 
        $current = $this_Exp3_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExp2Access().getExp2LeftAction_1_0(),
            $current);
    }
)(
(
		lv_tokenGlue_2_0=	'+' 
    {
        newLeafNode(lv_tokenGlue_2_0, grammarAccess.getExp2Access().getTokenGluePlusSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp2Rule());
	        }
       		setWithLastConsumed($current, "tokenGlue", true, "+");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp2Access().getRightExp3ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExp3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Exp3");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExp3
entryRuleExp3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp3Rule()); }
	 iv_ruleExp3=ruleExp3 
	 { $current=$iv_ruleExp3.current; } 
	 EOF 
;

// Rule Exp3
ruleExp3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExp3Access().getExp3LFParserRuleCall_0()); 
    }
    this_Exp3LF_0=ruleExp3LF
    { 
        $current = $this_Exp3LF_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExp3Access().getExp3LeftAction_1_0(),
            $current);
    }
)(	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExp3Access().getExclamationMarkKeyword_1_1_0());
    }

    |	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExp3Access().getAsteriskKeyword_1_1_1());
    }

    |	otherlv_4='**' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExp3Access().getAsteriskAsteriskKeyword_1_1_2());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp3Access().getRightExp4ParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleExp4		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"Exp4");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExp3LF
entryRuleExp3LF returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp3LFRule()); }
	 iv_ruleExp3LF=ruleExp3LF 
	 { $current=$iv_ruleExp3LF.current; } 
	 EOF 
;

// Rule Exp3LF
ruleExp3LF returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExp3LFAccess().getTableKeyword_0_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExp3LFAccess().getLeftCurlyBracketKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp3LFAccess().getCaseListListCaseParserRuleCall_0_2_0()); 
	    }
		lv_caseList_2_0=ruleListCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp3LFRule());
	        }
       		set(
       			$current, 
       			"caseList",
        		lv_caseList_2_0, 
        		"ListCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExp3LFAccess().getRightCurlyBracketKeyword_0_3());
    }
)
    |(	otherlv_4='table' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExp3LFAccess().getTableKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp3LFAccess().getArgTypeExp6ParserRuleCall_1_1_0()); 
	    }
		lv_argType_5_0=ruleExp6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp3LFRule());
	        }
       		set(
       			$current, 
       			"argType",
        		lv_argType_5_0, 
        		"Exp6");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExp3LFAccess().getLeftCurlyBracketKeyword_1_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp3LFAccess().getCaseListListCaseParserRuleCall_1_2_0_1_0()); 
	    }
		lv_caseList_7_0=ruleListCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp3LFRule());
	        }
       		set(
       			$current, 
       			"caseList",
        		lv_caseList_7_0, 
        		"ListCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExp3LFAccess().getRightCurlyBracketKeyword_1_2_0_2());
    }
)
    |(	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExp3LFAccess().getLeftSquareBracketKeyword_1_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp3LFAccess().getExpListListExpParserRuleCall_1_2_1_1_0()); 
	    }
		lv_expList_10_0=ruleListExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp3LFRule());
	        }
       		set(
       			$current, 
       			"expList",
        		lv_expList_10_0, 
        		"ListExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExp3LFAccess().getRightSquareBracketKeyword_1_2_1_2());
    }
)))
    |
    { 
        newCompositeNode(grammarAccess.getExp3LFAccess().getExp4ParserRuleCall_2()); 
    }
    this_Exp4_12=ruleExp4
    { 
        $current = $this_Exp4_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExp4
entryRuleExp4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp4Rule()); }
	 iv_ruleExp4=ruleExp4 
	 { $current=$iv_ruleExp4.current; } 
	 EOF 
;

// Rule Exp4
ruleExp4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExp4Access().getExp4LFParserRuleCall_0()); 
    }
    this_Exp4LF_0=ruleExp4LF
    { 
        $current = $this_Exp4LF_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExp4Access().getExp4LeftAction_1_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getExp4Access().getRightExp5ParserRuleCall_1_1_0_0()); 
	    }
		lv_right_2_0=ruleExp5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"Exp5");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExp4Access().getLeftCurlyBracketKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4Access().getRightExpParserRuleCall_1_1_1_1_0()); 
	    }
		lv_right_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExp4Access().getRightCurlyBracketKeyword_1_1_1_2());
    }
)))*)
;





// Entry rule entryRuleExp4LF
entryRuleExp4LF returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp4LFRule()); }
	 iv_ruleExp4LF=ruleExp4LF 
	 { $current=$iv_ruleExp4LF.current; } 
	 EOF 
;

// Rule Exp4LF
ruleExp4LF returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_case_0_0=	'case' 
    {
        newLeafNode(lv_case_0_0, grammarAccess.getExp4LFAccess().getCaseCaseKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "case", true, "case");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getCaseOfExpParserRuleCall_0_1_0()); 
	    }
		lv_caseOf_1_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"caseOf",
        		lv_caseOf_1_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExp4LFAccess().getOfKeyword_0_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getCaseListListCaseParserRuleCall_0_4_0()); 
	    }
		lv_caseList_4_0=ruleListCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"caseList",
        		lv_caseList_4_0, 
        		"ListCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_0_5());
    }
)
    |((
(
		lv_variants_6_0=	'variants' 
    {
        newLeafNode(lv_variants_6_0, grammarAccess.getExp4LFAccess().getVariantsVariantsKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "variants", true, "variants");
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getExpListListExpParserRuleCall_1_2_0()); 
	    }
		lv_expList_8_0=ruleListExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"expList",
        		lv_expList_8_0, 
        		"ListExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_1_3());
    }
)
    |((
(
		lv_pre_10_0=	'pre' 
    {
        newLeafNode(lv_pre_10_0, grammarAccess.getExp4LFAccess().getPrePreKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "pre", true, "pre");
	    }

)
)	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getCaseListListCaseParserRuleCall_2_2_0()); 
	    }
		lv_caseList_12_0=ruleListCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"caseList",
        		lv_caseList_12_0, 
        		"ListCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_2_3());
    }
)
    |((
(
		lv_pre_14_0=	'pre' 
    {
        newLeafNode(lv_pre_14_0, grammarAccess.getExp4LFAccess().getPrePreKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "pre", true, "pre");
	    }

)
)	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		lv_str_16_0=RULE_STRING
		{
			newLeafNode(lv_str_16_0, grammarAccess.getExp4LFAccess().getStrStringTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_16_0, 
        		"String");
	    }

)
)	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getExp4LFAccess().getSemicolonKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getAltsAlternParserRuleCall_3_4_0()); 
	    }
		lv_alts_18_0=ruleAltern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		add(
       			$current, 
       			"alts",
        		lv_alts_18_0, 
        		"Altern");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getExp4LFAccess().getSemicolonKeyword_3_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getAltsAlternParserRuleCall_3_5_1_0()); 
	    }
		lv_alts_20_0=ruleAltern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		add(
       			$current, 
       			"alts",
        		lv_alts_20_0, 
        		"Altern");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_3_6());
    }
)
    |((
(
		lv_pre_22_0=	'pre' 
    {
        newLeafNode(lv_pre_22_0, grammarAccess.getExp4LFAccess().getPrePreKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "pre", true, "pre");
	    }

)
)	otherlv_23='{' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getIdentIdentParserRuleCall_4_2_0()); 
	    }
		lv_ident_24_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_24_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_25=';' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getExp4LFAccess().getSemicolonKeyword_4_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getAltsAlternParserRuleCall_4_4_0()); 
	    }
		lv_alts_26_0=ruleAltern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		add(
       			$current, 
       			"alts",
        		lv_alts_26_0, 
        		"Altern");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_27=';' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getExp4LFAccess().getSemicolonKeyword_4_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getAltsAlternParserRuleCall_4_5_1_0()); 
	    }
		lv_alts_28_0=ruleAltern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		add(
       			$current, 
       			"alts",
        		lv_alts_28_0, 
        		"Altern");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_4_6());
    }
)
    |(	otherlv_30='strs' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getExp4LFAccess().getStrsKeyword_5_0());
    }
	otherlv_31='{' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getExp4LFAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getExpListListExpParserRuleCall_5_2_0()); 
	    }
		lv_expList_32_0=ruleListExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"expList",
        		lv_expList_32_0, 
        		"ListExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getExp4LFAccess().getRightCurlyBracketKeyword_5_3());
    }
)
    |(	otherlv_34='#' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getExp4LFAccess().getNumberSignKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getPatternPatt3ParserRuleCall_6_1_0()); 
	    }
		lv_pattern_35_0=rulePatt3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_35_0, 
        		"Patt3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_36='pattern' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getExp4LFAccess().getPatternKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getPatternExp5ParserRuleCall_7_1_0()); 
	    }
		lv_pattern_37_0=ruleExp5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_37_0, 
        		"Exp5");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_linwrap_38_0=	'lincat' 
    {
        newLeafNode(lv_linwrap_38_0, grammarAccess.getExp4LFAccess().getLinwrapLincatKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "linwrap", true, "lincat");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
        }
	otherlv_39=RULE_ID
	{
		newLeafNode(otherlv_39, grammarAccess.getExp4LFAccess().getLinNameIdentCrossReference_8_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getInnerExp5ParserRuleCall_8_2_0()); 
	    }
		lv_inner_40_0=ruleExp5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_40_0, 
        		"Exp5");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_linwrap_41_0=	'lin' 
    {
        newLeafNode(lv_linwrap_41_0, grammarAccess.getExp4LFAccess().getLinwrapLinKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
       		setWithLastConsumed($current, "linwrap", true, "lin");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp4LFRule());
	        }
        }
	otherlv_42=RULE_ID
	{
		newLeafNode(otherlv_42, grammarAccess.getExp4LFAccess().getLinNameIdentCrossReference_9_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp4LFAccess().getInnerExp5ParserRuleCall_9_2_0()); 
	    }
		lv_inner_43_0=ruleExp5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp4LFRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_43_0, 
        		"Exp5");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getExp4LFAccess().getExp5ParserRuleCall_10()); 
    }
    this_Exp5_44=ruleExp5
    { 
        $current = $this_Exp5_44.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExp5
entryRuleExp5 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp5Rule()); }
	 iv_ruleExp5=ruleExp5 
	 { $current=$iv_ruleExp5.current; } 
	 EOF 
;

// Rule Exp5
ruleExp5 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExp5Access().getExp6ParserRuleCall_0()); 
    }
    this_Exp6_0=ruleExp6
    { 
        $current = $this_Exp6_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExp5Access().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp5Access().getLabelsLabelParserRuleCall_1_1_0()); 
	    }
		lv_labels_2_0=ruleLabel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp5Rule());
	        }
       		add(
       			$current, 
       			"labels",
        		lv_labels_2_0, 
        		"Label");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExp6
entryRuleExp6 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp6Rule()); }
	 iv_ruleExp6=ruleExp6 
	 { $current=$iv_ruleExp6.current; } 
	 EOF 
;

// Rule Exp6
ruleExp6 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getExp6Access().getRefIdentCrossReference_0_0()); 
	}

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getSortSortParserRuleCall_1_0()); 
	    }
		lv_sort_1_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"sort",
        		true, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_string_2_0=RULE_STRING
		{
			newLeafNode(lv_string_2_0, grammarAccess.getExp6Access().getStringStringTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		true, 
        		"String");
	    }

)
)
    |(
(
		lv_integer_3_0=RULE_INTEGER
		{
			newLeafNode(lv_integer_3_0, grammarAccess.getExp6Access().getIntegerIntegerTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"integer",
        		true, 
        		"Integer");
	    }

)
)
    |(
(
		lv_double_4_0=RULE_DOUBLE
		{
			newLeafNode(lv_double_4_0, grammarAccess.getExp6Access().getDoubleDoubleTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"double",
        		true, 
        		"Double");
	    }

)
)
    |(
(
		lv_meta_5_0=	'?' 
    {
        newLeafNode(lv_meta_5_0, grammarAccess.getExp6Access().getMetaQuestionMarkKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "meta", true, "?");
	    }

)
)
    |((
(
		lv_emptyString_6_0=	'[' 
    {
        newLeafNode(lv_emptyString_6_0, grammarAccess.getExp6Access().getEmptyStringLeftSquareBracketKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "emptyString", true, "[");
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExp6Access().getRightSquareBracketKeyword_6_1());
    }
)
    |((
(
		lv_listCat_8_0=	'[' 
    {
        newLeafNode(lv_listCat_8_0, grammarAccess.getExp6Access().getListCatLeftSquareBracketKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "listCat", true, "[");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getExp6Access().getCategoryIdentCrossReference_7_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getContextExpsParserRuleCall_7_2_0()); 
	    }
		lv_context_10_0=ruleExps		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"context",
        		lv_context_10_0, 
        		"Exps");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExp6Access().getRightSquareBracketKeyword_7_3());
    }
)
    |((
(
		lv_tokenList_12_0=	'[' 
    {
        newLeafNode(lv_tokenList_12_0, grammarAccess.getExp6Access().getTokenListLeftSquareBracketKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "tokenList", true, "[");
	    }

)
)(
(
		lv_str_13_0=RULE_STRING
		{
			newLeafNode(lv_str_13_0, grammarAccess.getExp6Access().getStrStringTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_13_0, 
        		"String");
	    }

)
)	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getExp6Access().getRightSquareBracketKeyword_8_2());
    }
)
    |((
(
		lv_record_15_0=	'{' 
    {
        newLeafNode(lv_record_15_0, grammarAccess.getExp6Access().getRecordLeftCurlyBracketKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "record", true, "{");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getDefListListLocDefParserRuleCall_9_1_0()); 
	    }
		lv_defList_16_0=ruleListLocDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"defList",
        		lv_defList_16_0, 
        		"ListLocDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getExp6Access().getRightCurlyBracketKeyword_9_2());
    }
)
    |(	otherlv_18='<' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getExp6Access().getLessThanSignKeyword_10_0());
    }
((((
(
ruleListTupleComp
)
))=>(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getTupleListListTupleCompParserRuleCall_10_1_0_0_0()); 
	    }
		lv_tupleList_19_0=ruleListTupleComp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"tupleList",
        		lv_tupleList_19_0, 
        		"ListTupleComp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getExpressionExpParserRuleCall_10_1_1_0_0()); 
	    }
		lv_expression_20_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_20_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21=':' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getExp6Access().getColonKeyword_10_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getTypeExpParserRuleCall_10_1_1_2_0()); 
	    }
		lv_type_22_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_22_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_23='>' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExp6Access().getGreaterThanSignKeyword_10_2());
    }
)
    |((
(
		lv_identity_24_0=	'(' 
    {
        newLeafNode(lv_identity_24_0, grammarAccess.getExp6Access().getIdentityLeftParenthesisKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExp6Rule());
	        }
       		setWithLastConsumed($current, "identity", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp6Access().getInnerExpParserRuleCall_11_1_0()); 
	    }
		lv_inner_25_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp6Rule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_25_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_26=')' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getExp6Access().getRightParenthesisKeyword_11_2());
    }
))
;





// Entry rule entryRuleListExp
entryRuleListExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListExpRule()); }
	 iv_ruleListExp=ruleListExp 
	 { $current=$iv_ruleListExp.current; } 
	 EOF 
;

// Rule ListExp
ruleListExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListExpAccess().getListExpAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getListExpAccess().getExpressionsExpParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListExpRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListExpAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListExpAccess().getExpressionsExpParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListExpRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListExpAccess().getSemicolonKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleExps
entryRuleExps returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpsRule()); }
	 iv_ruleExps=ruleExps 
	 { $current=$iv_ruleExps.current; } 
	 EOF 
;

// Rule Exps
ruleExps returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpsAccess().getExpsAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpsAccess().getExpressionsExp6ParserRuleCall_1_0()); 
	    }
		lv_expressions_1_0=ruleExp6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpsRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"Exp6");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePatt
entryRulePatt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPattRule()); }
	 iv_rulePatt=rulePatt 
	 { $current=$iv_rulePatt.current; } 
	 EOF 
;

// Rule Patt
rulePatt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPattAccess().getPatt1ParserRuleCall_0()); 
    }
    this_Patt1_0=rulePatt1
    { 
        $current = $this_Patt1_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPattAccess().getPattLeftAction_1_0(),
            $current);
    }
)((
(
		lv_or_2_0=	'|' 
    {
        newLeafNode(lv_or_2_0, grammarAccess.getPattAccess().getOrVerticalLineKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPattRule());
	        }
       		setWithLastConsumed($current, "or", true, "|");
	    }

)
)
    |(
(
		lv_and_3_0=	'+' 
    {
        newLeafNode(lv_and_3_0, grammarAccess.getPattAccess().getAndPlusSignKeyword_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPattRule());
	        }
       		setWithLastConsumed($current, "and", true, "+");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPattAccess().getRightPatt1ParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=rulePatt1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPattRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Patt1");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePatt1
entryRulePatt1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatt1Rule()); }
	 iv_rulePatt1=rulePatt1 
	 { $current=$iv_rulePatt1.current; } 
	 EOF 
;

// Rule Patt1
rulePatt1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPatt1Access().getNameIdentParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt1Access().getValueListPattParserRuleCall_0_1_0()); 
	    }
		lv_value_1_0=ruleListPatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt1Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ListPatt");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPatt1Access().getNameIdentParserRuleCall_1_0_0()); 
	    }
		lv_name_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPatt1Access().getFullStopKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt1Access().getLabelIdentParserRuleCall_1_2_0()); 
	    }
		lv_label_4_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt1Rule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt1Access().getValueListPattParserRuleCall_1_3_0()); 
	    }
		lv_value_5_0=ruleListPatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt1Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"ListPatt");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getPatt1Access().getPatt3ParserRuleCall_2_0()); 
    }
    this_Patt3_6=rulePatt3
    { 
        $current = $this_Patt3_6.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_7='*' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPatt1Access().getAsteriskKeyword_2_1());
    }
)?)
    |
    { 
        newCompositeNode(grammarAccess.getPatt1Access().getPatt2LFParserRuleCall_3()); 
    }
    this_Patt2LF_8=rulePatt2LF
    { 
        $current = $this_Patt2LF_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePatt2
entryRulePatt2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatt2Rule()); }
	 iv_rulePatt2=rulePatt2 
	 { $current=$iv_rulePatt2.current; } 
	 EOF 
;

// Rule Patt2
rulePatt2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPatt2Access().getPatt2LFParserRuleCall_0()); 
    }
    this_Patt2LF_0=rulePatt2LF
    { 
        $current = $this_Patt2LF_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatt2Access().getPatt3ParserRuleCall_1()); 
    }
    this_Patt3_1=rulePatt3
    { 
        $current = $this_Patt3_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePatt2LF
entryRulePatt2LF returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatt2LFRule()); }
	 iv_rulePatt2LF=rulePatt2LF 
	 { $current=$iv_rulePatt2LF.current; } 
	 EOF 
;

// Rule Patt2LF
rulePatt2LF returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPatt2LFAccess().getBindToIdentParserRuleCall_0_0_0()); 
	    }
		lv_bindTo_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt2LFRule());
	        }
       		set(
       			$current, 
       			"bindTo",
        		lv_bindTo_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPatt2LFAccess().getCommercialAtKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt2LFAccess().getValuePatt3ParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=rulePatt3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt2LFRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Patt3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_negative_3_0=	'-' 
    {
        newLeafNode(lv_negative_3_0, grammarAccess.getPatt2LFAccess().getNegativeHyphenMinusKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt2LFRule());
	        }
       		setWithLastConsumed($current, "negative", true, "-");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt2LFAccess().getValuePatt3ParserRuleCall_1_1_0()); 
	    }
		lv_value_4_0=rulePatt3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt2LFRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Patt3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_inaccessible_5_0=	'~' 
    {
        newLeafNode(lv_inaccessible_5_0, grammarAccess.getPatt2LFAccess().getInaccessibleTildeKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt2LFRule());
	        }
       		setWithLastConsumed($current, "inaccessible", true, "~");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt2LFAccess().getPatternExp6ParserRuleCall_2_1_0()); 
	    }
		lv_pattern_6_0=ruleExp6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt2LFRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_6_0, 
        		"Exp6");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePatt3
entryRulePatt3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatt3Rule()); }
	 iv_rulePatt3=rulePatt3 
	 { $current=$iv_rulePatt3.current; } 
	 EOF 
;

// Rule Patt3
rulePatt3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_meta_0_0=	'?' 
    {
        newLeafNode(lv_meta_0_0, grammarAccess.getPatt3Access().getMetaQuestionMarkKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed($current, "meta", true, "?");
	    }

)
)
    |((
(
		lv_tokenList_1_0=	'[' 
    {
        newLeafNode(lv_tokenList_1_0, grammarAccess.getPatt3Access().getTokenListLeftSquareBracketKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed($current, "tokenList", true, "[");
	    }

)
)(
(
		lv_str_2_0=RULE_STRING
		{
			newLeafNode(lv_str_2_0, grammarAccess.getPatt3Access().getStrStringTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_2_0, 
        		"String");
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPatt3Access().getRightSquareBracketKeyword_1_2());
    }
)
    |(	otherlv_4='#' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatt3Access().getNumberSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt3Access().getPatternNameIdentParserRuleCall_2_1_0()); 
	    }
		lv_patternName_5_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt3Rule());
	        }
       		set(
       			$current, 
       			"patternName",
        		lv_patternName_5_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPatt3Access().getFullStopKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt3Access().getLabelIdentParserRuleCall_2_2_1_0()); 
	    }
		lv_label_7_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt3Rule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_7_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPatt3Access().getRefIdentParserRuleCall_3_0_0()); 
	    }
		lv_ref_8_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt3Rule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_8_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='.' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPatt3Access().getFullStopKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatt3Access().getLabelIdentParserRuleCall_3_1_1_0()); 
	    }
		lv_label_10_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatt3Rule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_10_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(
(
		lv_wildcard_11_0=	'_' 
    {
        newLeafNode(lv_wildcard_11_0, grammarAccess.getPatt3Access().getWildcard_Keyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "_");
	    }

)
)
    |(
(
		lv_integer_12_0=RULE_INTEGER
		{
			newLeafNode(lv_integer_12_0, grammarAccess.getPatt3Access().getIntegerIntegerTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"integer",
        		true, 
        		"Integer");
	    }

)
)
    |(
(
		lv_double_13_0=RULE_DOUBLE
		{
			newLeafNode(lv_double_13_0, grammarAccess.getPatt3Access().getDoubleDoubleTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"double",
        		true, 
        		"Double");
	    }

)
)
    |(
(
		lv_string_14_0=RULE_STRING
		{
			newLeafNode(lv_string_14_0, grammarAccess.getPatt3Access().getStringStringTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatt3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		true, 
        		"String");
	    }

)
)
    |(	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPatt3Access().getLeftCurlyBracketKeyword_8_0());
    }

    { 
        newCompositeNode(grammarAccess.getPatt3Access().getListPattAssParserRuleCall_8_1()); 
    }
    this_ListPattAss_16=ruleListPattAss
    { 
        $current = $this_ListPattAss_16.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPatt3Access().getRightCurlyBracketKeyword_8_2());
    }
)
    |(	otherlv_18='<' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getPatt3Access().getLessThanSignKeyword_9_0());
    }

    { 
        newCompositeNode(grammarAccess.getPatt3Access().getListPattTupleCompParserRuleCall_9_1()); 
    }
    this_ListPattTupleComp_19=ruleListPattTupleComp
    { 
        $current = $this_ListPattTupleComp_19.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_20='>' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getPatt3Access().getGreaterThanSignKeyword_9_2());
    }
)
    |(	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getPatt3Access().getLeftParenthesisKeyword_10_0());
    }

    { 
        newCompositeNode(grammarAccess.getPatt3Access().getPattParserRuleCall_10_1()); 
    }
    this_Patt_22=rulePatt
    { 
        $current = $this_Patt_22.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getPatt3Access().getRightParenthesisKeyword_10_2());
    }
))
;





// Entry rule entryRulePattAss
entryRulePattAss returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPattAssRule()); }
	 iv_rulePattAss=rulePattAss 
	 { $current=$iv_rulePattAss.current; } 
	 EOF 
;

// Rule PattAss
rulePattAss returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPattAssAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPattAssRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPattAssAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPattAssAccess().getNameIdentParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPattAssRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPattAssAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPattAssAccess().getValuePattParserRuleCall_3_0()); 
	    }
		lv_value_4_0=rulePatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPattAssRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Patt");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	 iv_ruleLabel=ruleLabel 
	 { $current=$iv_ruleLabel.current; } 
	 EOF 
;

// Rule Label
ruleLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getNameIdentCrossReference_0_0()); 
	}

)
)
    |(	otherlv_1='$' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getDollarSignKeyword_1_0());
    }
(
(
		lv_index_2_0=RULE_INTEGER
		{
			newLeafNode(lv_index_2_0, grammarAccess.getLabelAccess().getIndexIntegerTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_2_0, 
        		"Integer");
	    }

)
)))
;





// Entry rule entryRuleSort
entryRuleSort returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortRule()); } 
	 iv_ruleSort=ruleSort 
	 { $current=$iv_ruleSort.current.getText(); }  
	 EOF 
;

// Rule Sort
ruleSort returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Type' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSortAccess().getTypeKeyword_0()); 
    }

    |
	kw='PType' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSortAccess().getPTypeKeyword_1()); 
    }

    |
	kw='Tok' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSortAccess().getTokKeyword_2()); 
    }

    |
	kw='Str' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSortAccess().getStrKeyword_3()); 
    }

    |
	kw='Strs' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSortAccess().getStrsKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleListPattAss
entryRuleListPattAss returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListPattAssRule()); }
	 iv_ruleListPattAss=ruleListPattAss 
	 { $current=$iv_ruleListPattAss.current; } 
	 EOF 
;

// Rule ListPattAss
ruleListPattAss returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListPattAssAccess().getListPattAssAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getListPattAssAccess().getAssignmentsPattAssParserRuleCall_1_0_0()); 
	    }
		lv_assignments_1_0=rulePattAss		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListPattAssRule());
	        }
       		add(
       			$current, 
       			"assignments",
        		lv_assignments_1_0, 
        		"PattAss");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListPattAssAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListPattAssAccess().getAssignmentsPattAssParserRuleCall_1_1_1_0()); 
	    }
		lv_assignments_3_0=rulePattAss		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListPattAssRule());
	        }
       		add(
       			$current, 
       			"assignments",
        		lv_assignments_3_0, 
        		"PattAss");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListPattAssAccess().getSemicolonKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleListPatt
entryRuleListPatt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListPattRule()); }
	 iv_ruleListPatt=ruleListPatt 
	 { $current=$iv_ruleListPatt.current; } 
	 EOF 
;

// Rule ListPatt
ruleListPatt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getListPattAccess().getPatternsPattArgParserRuleCall_0()); 
	    }
		lv_patterns_0_0=rulePattArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListPattRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_0_0, 
        		"PattArg");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRulePattArg
entryRulePattArg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPattArgRule()); }
	 iv_rulePattArg=rulePattArg 
	 { $current=$iv_rulePattArg.current; } 
	 EOF 
;

// Rule PattArg
rulePattArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPattArgAccess().getPatt2ParserRuleCall_0()); 
    }
    this_Patt2_0=rulePatt2
    { 
        $current = $this_Patt2_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPattArgAccess().getLeftCurlyBracketKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getPattArgAccess().getPattParserRuleCall_1_1()); 
    }
    this_Patt_2=rulePatt
    { 
        $current = $this_Patt_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPattArgAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleArg
entryRuleArg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgRule()); }
	 iv_ruleArg=ruleArg 
	 { $current=$iv_ruleArg.current; } 
	 EOF 
;

// Rule Arg
ruleArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_wildcard_1_0=	'_' 
    {
        newLeafNode(lv_wildcard_1_0, grammarAccess.getArgAccess().getWildcard_Keyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgRule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "_");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getNameIdentParserRuleCall_2_1_0()); 
	    }
		lv_name_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArgAccess().getRightCurlyBracketKeyword_2_2());
    }
))
;





// Entry rule entryRuleBind
entryRuleBind returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindRule()); }
	 iv_ruleBind=ruleBind 
	 { $current=$iv_ruleBind.current; } 
	 EOF 
;

// Rule Bind
ruleBind returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBindAccess().getNameIdentParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_wildcard_1_0=	'_' 
    {
        newLeafNode(lv_wildcard_1_0, grammarAccess.getBindAccess().getWildcard_Keyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindRule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "_");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindAccess().getNameIdentParserRuleCall_2_1_0()); 
	    }
		lv_name_3_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBindAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindAccess().getNameIdentParserRuleCall_2_2_1_0()); 
	    }
		lv_name_5_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBindAccess().getRightCurlyBracketKeyword_2_3());
    }
))
;





// Entry rule entryRuleListBind
entryRuleListBind returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListBindRule()); }
	 iv_ruleListBind=ruleListBind 
	 { $current=$iv_ruleListBind.current; } 
	 EOF 
;

// Rule ListBind
ruleListBind returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListBindAccess().getBindingsBindParserRuleCall_0_0()); 
	    }
		lv_bindings_0_0=ruleBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListBindRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_0_0, 
        		"Bind");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListBindAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListBindAccess().getBindingsBindParserRuleCall_1_1_0()); 
	    }
		lv_bindings_2_0=ruleBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListBindRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_2_0, 
        		"Bind");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleListTupleComp
entryRuleListTupleComp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListTupleCompRule()); }
	 iv_ruleListTupleComp=ruleListTupleComp 
	 { $current=$iv_ruleListTupleComp.current; } 
	 EOF 
;

// Rule ListTupleComp
ruleListTupleComp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListTupleCompAccess().getListTupleCompAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getListTupleCompAccess().getElementsExpParserRuleCall_1_0_0()); 
	    }
		lv_elements_1_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTupleCompRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListTupleCompAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListTupleCompAccess().getElementsExpParserRuleCall_1_1_1_0()); 
	    }
		lv_elements_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTupleCompRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListTupleCompAccess().getCommaKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleListPattTupleComp
entryRuleListPattTupleComp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListPattTupleCompRule()); }
	 iv_ruleListPattTupleComp=ruleListPattTupleComp 
	 { $current=$iv_ruleListPattTupleComp.current; } 
	 EOF 
;

// Rule ListPattTupleComp
ruleListPattTupleComp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListPattTupleCompAccess().getListPattTupleCompAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getListPattTupleCompAccess().getPatternsPattParserRuleCall_1_0_0()); 
	    }
		lv_patterns_1_0=rulePatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListPattTupleCompRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_1_0, 
        		"Patt");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListPattTupleCompAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListPattTupleCompAccess().getPatternsPattParserRuleCall_1_1_1_0()); 
	    }
		lv_patterns_3_0=rulePatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListPattTupleCompRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_3_0, 
        		"Patt");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListPattTupleCompAccess().getCommaKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getPatternPattParserRuleCall_0_0()); 
	    }
		lv_pattern_0_0=rulePatt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_0_0, 
        		"Patt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCaseAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getRightExpParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListCase
entryRuleListCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListCaseRule()); }
	 iv_ruleListCase=ruleListCase 
	 { $current=$iv_ruleListCase.current; } 
	 EOF 
;

// Rule ListCase
ruleListCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListCaseAccess().getCasesCaseParserRuleCall_0_0()); 
	    }
		lv_cases_0_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListCaseRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_0_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListCaseAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListCaseAccess().getCasesCaseParserRuleCall_1_1_0()); 
	    }
		lv_cases_2_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListCaseRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_2_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAltern
entryRuleAltern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternRule()); }
	 iv_ruleAltern=ruleAltern 
	 { $current=$iv_ruleAltern.current; } 
	 EOF 
;

// Rule Altern
ruleAltern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAlternAccess().getAlt1ExpParserRuleCall_0_0()); 
	    }
		lv_alt1_0_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternRule());
	        }
       		set(
       			$current, 
       			"alt1",
        		lv_alt1_0_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlternAccess().getSolidusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternAccess().getAlt2ExpParserRuleCall_2_0()); 
	    }
		lv_alt2_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternRule());
	        }
       		set(
       			$current, 
       			"alt2",
        		lv_alt2_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDDecl
entryRuleDDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDDeclRule()); }
	 iv_ruleDDecl=ruleDDecl 
	 { $current=$iv_ruleDDecl.current; } 
	 EOF 
;

// Rule DDecl
ruleDDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDDeclAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDeclAccess().getBindListListBindParserRuleCall_0_1_0()); 
	    }
		lv_bindList_1_0=ruleListBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDeclRule());
	        }
       		set(
       			$current, 
       			"bindList",
        		lv_bindList_1_0, 
        		"ListBind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDDeclAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDeclAccess().getEExpParserRuleCall_0_3_0()); 
	    }
		lv_e_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDeclRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDDeclAccess().getRightParenthesisKeyword_0_4());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getDDeclAccess().getExp6ParserRuleCall_1()); 
    }
    this_Exp6_5=ruleExp6
    { 
        $current = $this_Exp6_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIdent
entryRuleIdent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentRule()); }
	 iv_ruleIdent=ruleIdent 
	 { $current=$iv_ruleIdent.current; } 
	 EOF 
;

// Rule Ident
ruleIdent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_s_0_0=RULE_ID
		{
			newLeafNode(lv_s_0_0, grammarAccess.getIdentAccess().getSIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"s",
        		lv_s_0_0, 
        		"ID");
	    }

)
)
;





RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'\'')*;

RULE_STRING : '"' ('\\' ('"'|'\\')|~(('\\'|'"')))* '"';

RULE_INTEGER : ('0'..'9')+;

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')+ ('e' '-'? ('0'..'9')+)?;

RULE_COMPILER_PRAGMA : '--#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_GF_DOC : ('--%'|'--:') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ML_COMMENT : '{-' ( options {greedy=false;} : . )*'-}';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


